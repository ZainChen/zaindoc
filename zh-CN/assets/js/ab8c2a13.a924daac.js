"use strict";(self.webpackChunkzaindoc=self.webpackChunkzaindoc||[]).push([[4199],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return d}});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function i(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var s=r.createContext({}),c=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):l(l({},t),e)),n},p=function(e){var t=c(e.components);return r.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,s=e.parentName,p=i(e,["components","mdxType","originalType","parentName"]),m=c(n),d=a,f=m["".concat(s,".").concat(d)]||m[d]||u[d]||o;return n?r.createElement(f,l(l({ref:t},p),{},{components:n})):r.createElement(f,l({ref:t},p))}));function d(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,l=new Array(o);l[0]=m;var i={};for(var s in t)hasOwnProperty.call(t,s)&&(i[s]=t[s]);i.originalType=e,i.mdxType="string"==typeof e?e:a,l[1]=i;for(var c=2;c<o;c++)l[c]=n[c];return r.createElement.apply(null,l)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},1983:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return i},metadata:function(){return c},toc:function(){return u}});var r=n(7462),a=n(3366),o=(n(7294),n(3905)),l=["components"],i={},s="\u76ee\u5f55",c={unversionedId:"docSidebar/readme2",id:"docSidebar/readme2",title:"\u76ee\u5f55",description:"- \u6807\u9898",source:"@site/docs/docSidebar/readme2.md",sourceDirName:"docSidebar",slug:"/docSidebar/readme2",permalink:"/zaindoc/zh-CN/docs/docSidebar/readme2",editUrl:"https://github.com/ZainChen/zaindoc/tree/main/docs/docSidebar/readme2.md",tags:[],version:"current",frontMatter:{},sidebar:"docSidebar",previous:{title:"readme1",permalink:"/zaindoc/zh-CN/docs/docSidebar/readme1"}},p={},u=[{value:"\u65b9\u6cd5\u4e00",id:"\u65b9\u6cd5\u4e00",level:2},{value:"\u5206\u6790",id:"\u5206\u6790",level:3},{value:"\u4ee3\u7801",id:"\u4ee3\u7801",level:3},{value:"code-cpp-1",id:"code-cpp-1",level:4},{value:"code-js-1",id:"code-js-1",level:4}],m={toc:u};function d(e){var t=e.components,n=(0,a.Z)(e,l);return(0,o.kt)("wrapper",(0,r.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"\u76ee\u5f55"},"\u76ee\u5f55"),(0,o.kt)("blockquote",null,(0,o.kt)("ul",{parentName:"blockquote"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#%E6%A0%87%E9%A2%98"},"\u6807\u9898")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#%E8%A7%A3"},"\u89e3"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#%E6%96%B9%E6%B3%95%E4%B8%80"},"\u65b9\u6cd5\u4e00\uff1a\u66b4\u529b"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#code-cpp-1"},"code-cpp-1")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"#code-js-1"},"code-js-1")))))))),(0,o.kt)("h1",{id:"\u6807\u9898"},"\u6807\u9898"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"#%E7%9B%AE%E5%BD%95"},"\u76ee\u5f55"))),(0,o.kt)("p",null,"14.","\xa0","\u6700\u957f\u516c\u5171\u524d\u7f00"),(0,o.kt)("p",null,"\u7f16\u5199\u4e00\u4e2a\u51fd\u6570\u6765\u67e5\u627e\u5b57\u7b26\u4e32\u6570\u7ec4\u4e2d\u7684\u6700\u957f\u516c\u5171\u524d\u7f00\u3002"),(0,o.kt)("p",null,'\u5982\u679c\u4e0d\u5b58\u5728\u516c\u5171\u524d\u7f00\uff0c\u8fd4\u56de\u7a7a\u5b57\u7b26\u4e32\xa0""\u3002'),(0,o.kt)("p",null,"\u793a\u4f8b\xa01:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\u8f93\u5165: ["flower","flow","flight"]\n\u8f93\u51fa: "fl"\n')),(0,o.kt)("p",null,"\u793a\u4f8b\xa02:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'\u8f93\u5165: ["dog","racecar","car"]\n\u8f93\u51fa: ""\n')),(0,o.kt)("p",null,"\u89e3\u91ca: \u8f93\u5165\u4e0d\u5b58\u5728\u516c\u5171\u524d\u7f00\u3002"),(0,o.kt)("p",null,"\u8bf4\u660e:"),(0,o.kt)("p",null,"\u6240\u6709\u8f93\u5165\u53ea\u5305\u542b\u5c0f\u5199\u5b57\u6bcd\xa0a-z\xa0\u3002"),(0,o.kt)("h1",{id:"\u89e3"},"\u89e3"),(0,o.kt)("h2",{id:"\u65b9\u6cd5\u4e00"},"\u65b9\u6cd5\u4e00"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"#%E7%9B%AE%E5%BD%95"},"\u76ee\u5f55")," | ",(0,o.kt)("a",{parentName:"p",href:"#%E6%A0%87%E9%A2%98"},"\u6807\u9898")," | ",(0,o.kt)("a",{parentName:"p",href:"#code-cpp-1"},"C++"),", ",(0,o.kt)("a",{parentName:"p",href:"#code-js-1"},"JavaScript"))),(0,o.kt)("p",null,"\u66b4\u529b"),(0,o.kt)("h3",{id:"\u5206\u6790"},"\u5206\u6790"),(0,o.kt)("p",null,"..."),(0,o.kt)("h3",{id:"\u4ee3\u7801"},"\u4ee3\u7801"),(0,o.kt)("h4",{id:"code-cpp-1"},"code-cpp-1"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"#%E7%9B%AE%E5%BD%95"},"\u76ee\u5f55")," | ",(0,o.kt)("a",{parentName:"p",href:"#%E6%A0%87%E9%A2%98"},"\u6807\u9898")," | ",(0,o.kt)("a",{parentName:"p",href:"#%E6%96%B9%E6%B3%95%E4%B8%80"},"\u5206\u6790"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-cpp"},'#include<iostream>\n#include<vector>\nusing namespace std;\n\nclass Solution {\npublic:\n    string longestCommonPrefix(vector<string>& strs) {\n        string s = "";\n        int k = 0;\n        while(strs.size() > 0 && k < strs[0].size()) {\n            char p = strs[0][k];\n            bool t = true;\n            for(int i = 1; i < strs.size(); i++) {\n                if(!(k < strs[i].size() && strs[i][k] == p)) {\n                    t = false;\n                    break;\n                }\n            }\n            if(t) {\n                s += p;\n            } else {\n                break;\n            }\n            k++;\n        }\n        return s;\n    }\n};\n\nint main() {\n    string str[] = {"flower", "flow", "flight"};\n    vector<string> strs(str, str+sizeof(str)/sizeof(str[0]));\n    \n    string str1[] = {"aca", "cba"};\n    vector<string> strs1(str1, str1+sizeof(str1)/sizeof(str1[0]));\n\n    Solution solution;\n\n    string vecOut = solution.longestCommonPrefix(strs);\n    cout << vecOut << endl;\n    string vecOut1 = solution.longestCommonPrefix(strs1);\n    cout << vecOut1 << endl;\n\n    system("pause");\n}\n')),(0,o.kt)("h4",{id:"code-js-1"},"code-js-1"),(0,o.kt)("blockquote",null,(0,o.kt)("p",{parentName:"blockquote"},(0,o.kt)("a",{parentName:"p",href:"#%E7%9B%AE%E5%BD%95"},"\u76ee\u5f55")," | ",(0,o.kt)("a",{parentName:"p",href:"#%E6%A0%87%E9%A2%98"},"\u6807\u9898")," | ",(0,o.kt)("a",{parentName:"p",href:"#%E6%96%B9%E6%B3%95%E4%B8%80"},"\u5206\u6790"))),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-js"},'/**\n * @param {string[]} strs\n * @return {string}\n */\nvar longestCommonPrefix = function(strs) {\n    let s = \'\';\n    let k = 0;\n    while(strs && strs.length > 0 && strs[0] && k < strs[0].length) {\n        let p = strs[0][k];\n        let t = true;\n        for(let i = 1; i < strs.length; i++) {\n            if(!(k < strs[i].length && strs[i][k] === p)) {\n                t = false;\n                break;\n            }\n        }\n        if(t) {\n            s += p;\n        } else {\n            break;\n        }\n        k++;\n    }\n    return s;\n};\n\nlet sample1 = ["flower", "flow", "flight"];\nlet sample2 = ["dog", "racecar", "car"];\nlet sample3 = ["aca", "cba"];\n\nconsole.log(\'zain>>>>>\', longestCommonPrefix(sample1));\nconsole.log(\'zain>>>>>\', longestCommonPrefix(sample2));\nconsole.log(\'zain>>>>>\', longestCommonPrefix(sample3));\n')))}d.isMDXComponent=!0}}]);