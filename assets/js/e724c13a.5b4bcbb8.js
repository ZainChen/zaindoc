"use strict";(self.webpackChunkzaindoc=self.webpackChunkzaindoc||[]).push([[7526],{3905:(e,t,n)=>{n.d(t,{Zo:()=>p,kt:()=>h});var l=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);t&&(l=l.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,l)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function r(e,t){if(null==e)return{};var n,l,a=function(e,t){if(null==e)return{};var n,l,a={},i=Object.keys(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(l=0;l<i.length;l++)n=i[l],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var d=l.createContext({}),s=function(e){var t=l.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},p=function(e){var t=s(e.components);return l.createElement(d.Provider,{value:t},e.children)},k="mdxType",u={inlineCode:"code",wrapper:function(e){var t=e.children;return l.createElement(l.Fragment,{},t)}},c=l.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,d=e.parentName,p=r(e,["components","mdxType","originalType","parentName"]),k=s(n),c=a,h=k["".concat(d,".").concat(c)]||k[c]||u[c]||i;return n?l.createElement(h,o(o({ref:t},p),{},{components:n})):l.createElement(h,o({ref:t},p))}));function h(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=c;var r={};for(var d in t)hasOwnProperty.call(t,d)&&(r[d]=t[d]);r.originalType=e,r[k]="string"==typeof e?e:a,o[1]=r;for(var s=2;s<i;s++)o[s]=n[s];return l.createElement.apply(null,o)}return l.createElement.apply(null,n)}c.displayName="MDXCreateElement"},4829:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>s});var l=n(7462),a=(n(7294),n(3905));const i={},o="Markdown User Guide",r={unversionedId:"note/other/markdown-guide",id:"note/other/markdown-guide",title:"Markdown User Guide",description:"---",source:"@site/docs/note/other/markdown-guide.md",sourceDirName:"note/other",slug:"/note/other/markdown-guide",permalink:"/zaindoc/docs/note/other/markdown-guide",draft:!1,editUrl:"https://github.com/ZainChen/zaindoc/tree/main/docs/note/other/markdown-guide.md",tags:[],version:"current",frontMatter:{},sidebar:"note",previous:{title:"Other",permalink:"/zaindoc/docs/note/other/"},next:{title:"Zaindoc",permalink:"/zaindoc/docs/note/zaindoc/"}},d={},s=[{value:"Title",id:"title",level:2},{value:"This is a level-two heading",id:"this-is-a-level-two-heading",level:2},{value:"This is a level-three heading",id:"this-is-a-level-three-heading",level:3},{value:"This is a level-four heading",id:"this-is-a-level-four-heading",level:4},{value:"This is a level-five heading",id:"this-is-a-level-five-heading",level:5},{value:"This is a level-six heading",id:"this-is-a-level-six-heading",level:6},{value:"Font",id:"font",level:2},{value:"Quote",id:"quote",level:2},{value:"Divider",id:"divider",level:2},{value:"Image",id:"image",level:2},{value:"Method 1",id:"method-1",level:3},{value:"Method 2",id:"method-2",level:3},{value:"Hyperlink",id:"hyperlink",level:2},{value:"Method 1",id:"method-1-1",level:3},{value:"Method 2",id:"method-2-1",level:3},{value:"List",id:"list",level:2},{value:"Unordered list",id:"unordered-list",level:3},{value:"Ordered list",id:"ordered-list",level:3},{value:"List nesting",id:"list-nesting",level:3},{value:"Table",id:"table",level:2},{value:"Code",id:"code",level:2},{value:"Inline Code",id:"inline-code",level:3},{value:"Code Blocks",id:"code-blocks",level:3}],p={toc:s},k="wrapper";function u(e){let{components:t,...n}=e;return(0,a.kt)(k,(0,l.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"markdown-user-guide"},"Markdown User Guide"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"title"},"Title"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Standard syntax typically involves writing text after a ",(0,a.kt)("inlineCode",{parentName:"p"},"#")," followed by a space")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-markdown"},"# This is a level-one heading\n## This is a level-two heading\n### This is a level-three heading\n#### This is a level-four heading\n##### This is a level-five heading\n###### This is a level-six heading\n")),(0,a.kt)("p",null,"Example:"),(0,a.kt)("h1",{id:"this-is-a-level-one-heading"},"This is a level-one heading"),(0,a.kt)("h2",{id:"this-is-a-level-two-heading"},"This is a level-two heading"),(0,a.kt)("h3",{id:"this-is-a-level-three-heading"},"This is a level-three heading"),(0,a.kt)("h4",{id:"this-is-a-level-four-heading"},"This is a level-four heading"),(0,a.kt)("h5",{id:"this-is-a-level-five-heading"},"This is a level-five heading"),(0,a.kt)("h6",{id:"this-is-a-level-six-heading"},"This is a level-six heading"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"font"},"Font"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-markdown"},"**This is bold text**\n*This is italicized text*\n***This is bold and italicized text***\n~~This is strikethrough text~~\n")),(0,a.kt)("p",null,"Example:"),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},"This is bold text")),(0,a.kt)("p",null,(0,a.kt)("em",{parentName:"p"},"This is italicized text")),(0,a.kt)("p",null,(0,a.kt)("strong",{parentName:"p"},(0,a.kt)("em",{parentName:"strong"},"This is bold and italicized text"))),(0,a.kt)("p",null,(0,a.kt)("del",{parentName:"p"},"This is strikethrough text")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"quote"},"Quote"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Simply add the symbol ",(0,a.kt)("inlineCode",{parentName:"p"},">")," before the text you want to quote. The quotation can be nested, such as adding two ",(0,a.kt)("inlineCode",{parentName:"p"},">>"),", three ",(0,a.kt)("inlineCode",{parentName:"p"},">>>"),", n number of...")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-markdown"},">This is the quotation\n>>This is the quoted content\n>>\n>>>>>>>>>>This is the citation\n")),(0,a.kt)("p",null,"Example:"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"This is the quotation"),(0,a.kt)("blockquote",{parentName:"blockquote"},(0,a.kt)("p",{parentName:"blockquote"},"This is the quoted content"),(0,a.kt)("blockquote",{parentName:"blockquote"},(0,a.kt)("blockquote",{parentName:"blockquote"},(0,a.kt)("blockquote",{parentName:"blockquote"},(0,a.kt)("blockquote",{parentName:"blockquote"},(0,a.kt)("blockquote",{parentName:"blockquote"},(0,a.kt)("blockquote",{parentName:"blockquote"},(0,a.kt)("blockquote",{parentName:"blockquote"},(0,a.kt)("blockquote",{parentName:"blockquote"},(0,a.kt)("p",{parentName:"blockquote"},"This is the citation"))))))))))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"divider"},"Divider"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Three or more ",(0,a.kt)("inlineCode",{parentName:"p"},"-")," or ",(0,a.kt)("inlineCode",{parentName:"p"},"*")," will do")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-markdown"},"----\n***\n*****\n")),(0,a.kt)("p",null,"Example:"),(0,a.kt)("hr",null),(0,a.kt)("hr",null),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"image"},"Image"),(0,a.kt)("h3",{id:"method-1"},"Method 1"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Can't change image size")),(0,a.kt)("p",null,"Image alt: the text displayed below the image, an explanation of the image content (can be added or not, Typora is not valid)"),(0,a.kt)("p",null,"Image title: the title of the image, the content displayed when the mouse moves over the image (can be added or not, Typora is not valid)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-markdown"},'![image alt](image address "image title")\n')),(0,a.kt)("p",null,"Example:"),(0,a.kt)("p",null,(0,a.kt)("img",{parentName:"p",src:"https://zainchen.github.io/zaindoc/zh-CN/img/logo.jpeg",alt:"zain",title:"zain"})),(0,a.kt)("h3",{id:"method-2"},"Method 2"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Directly using the ",(0,a.kt)("inlineCode",{parentName:"p"},"html")," tag, you can modify the image size")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<img src="https://zainchen.github.io/zaindoc/zh-CN/img/logo.jpeg" style="width:100px;height:100px;" alt="\u5fd7\u94f6" />\n')),(0,a.kt)("img",{src:"https://zainchen.github.io/zaindoc/zh-CN/img/logo.jpeg",style:{width:"50px",height:"50px"},alt:"\u5fd7\u94f6"}),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"hyperlink"},"Hyperlink"),(0,a.kt)("h3",{id:"method-1-1"},"Method 1"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("inlineCode",{parentName:"p"},"title")," can be added or not")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-markdown"},'[Hyperlink name](Hyperlink address "Hyperlink title")\n')),(0,a.kt)("p",null,"Example:"),(0,a.kt)("p",null,(0,a.kt)("a",{parentName:"p",href:"https://www.google.com"},"Google"),"\n",(0,a.kt)("a",{parentName:"p",href:"https://www.bing.com"},"Bing")),(0,a.kt)("h3",{id:"method-2-1"},"Method 2"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-html"},'<a href="Hyperlink address" target="_blank">Hyperlink title</a>\n')),(0,a.kt)("p",null,"Example:"),(0,a.kt)("a",{href:"https://www.google.com",target:"_blank"},"Google"),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"list"},"List"),(0,a.kt)("h3",{id:"unordered-list"},"Unordered list"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},(0,a.kt)("inlineCode",{parentName:"p"},"-")," ",(0,a.kt)("inlineCode",{parentName:"p"},"+")," ",(0,a.kt)("inlineCode",{parentName:"p"},"*")," Either one is fine (a space between ",(0,a.kt)("inlineCode",{parentName:"p"},"-")," ",(0,a.kt)("inlineCode",{parentName:"p"},"+")," ",(0,a.kt)("inlineCode",{parentName:"p"},"*")," and the content)")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-markdown"},"- List content\n+ list content\n* list content\n")),(0,a.kt)("p",null,"Example:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"List content")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"list content")),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"List Contents")),(0,a.kt)("h3",{id:"ordered-list"},"Ordered list"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Add a space between the number and the content")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-markdown"},"1. list content\n2. list content\n3. list content\n")),(0,a.kt)("p",null,"Example:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"list content"),(0,a.kt)("li",{parentName:"ol"},"list content"),(0,a.kt)("li",{parentName:"ol"},"list content")),(0,a.kt)("h3",{id:"list-nesting"},"List nesting"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Just knock two spaces between the previous and next level")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-markdown"},"- List Contents\n  - List Contents\n    - List Contents\n    - List Contents\n  - List Contents\n  + List Contents\n* List Contents\n")),(0,a.kt)("p",null,"Example:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"List Contents",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"List Contents",(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"List Contents"),(0,a.kt)("li",{parentName:"ul"},"List Contents"))),(0,a.kt)("li",{parentName:"ul"},"List Contents")),(0,a.kt)("ul",{parentName:"li"},(0,a.kt)("li",{parentName:"ul"},"List Contents")))),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"List Contents")),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"table"},"Table"),(0,a.kt)("p",null,"Note:"),(0,a.kt)("p",null,"The second line separates the header and content (only need one ",(0,a.kt)("inlineCode",{parentName:"p"},"-")," for alignment, but extra ones are added for clarity)."),(0,a.kt)("p",null,"Text aligns to the left by default."),(0,a.kt)("p",null,"Header separator ",(0,a.kt)("inlineCode",{parentName:"p"},"-")," with ",(0,a.kt)("inlineCode",{parentName:"p"},":")," on both sides aligns header text to the center."),(0,a.kt)("p",null,"Header separator ",(0,a.kt)("inlineCode",{parentName:"p"},"-")," with ",(0,a.kt)("inlineCode",{parentName:"p"},":")," on the right aligns header text to the right."),(0,a.kt)("p",null,"Header separator ",(0,a.kt)("inlineCode",{parentName:"p"},"-")," with ",(0,a.kt)("inlineCode",{parentName:"p"},":")," on the left aligns header text to the left."),(0,a.kt)("p",null,"(Note: In the original syntax, both sides of the table to be enclosed in ",(0,a.kt)("inlineCode",{parentName:"p"},"| "),", but it is omitted here.)"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-markdown"},"Header|Header|Header\n---|:--:|--:\nContent|Content|Content\nContent|Content|Content\n")),(0,a.kt)("p",null,"Example:"),(0,a.kt)("table",null,(0,a.kt)("thead",{parentName:"table"},(0,a.kt)("tr",{parentName:"thead"},(0,a.kt)("th",{parentName:"tr",align:null},"Header"),(0,a.kt)("th",{parentName:"tr",align:"center"},"Header"),(0,a.kt)("th",{parentName:"tr",align:"right"},"Header"))),(0,a.kt)("tbody",{parentName:"table"},(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Content"),(0,a.kt)("td",{parentName:"tr",align:"center"},"Content"),(0,a.kt)("td",{parentName:"tr",align:"right"},"Content")),(0,a.kt)("tr",{parentName:"tbody"},(0,a.kt)("td",{parentName:"tr",align:null},"Content"),(0,a.kt)("td",{parentName:"tr",align:"center"},"Content"),(0,a.kt)("td",{parentName:"tr",align:"right"},"Content")))),(0,a.kt)("hr",null),(0,a.kt)("h2",{id:"code"},"Code"),(0,a.kt)("h3",{id:"inline-code"},"Inline Code"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Use one backtick to surround the code")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-markdown"},"`Code Content`\n")),(0,a.kt)("p",null,"Example:"),(0,a.kt)("p",null,(0,a.kt)("inlineCode",{parentName:"p"},"Code Content")),(0,a.kt)("h3",{id:"code-blocks"},"Code Blocks"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Code blocks are enclosed in three backticks on each side, and the backticks occupy a separate line.")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-markdown"},"// Use `\\` as a placeholder to prevent syntax from taking effect.\n\\```cpp\nCode block...\nCode block...\nCode block...\n\\```\n")),(0,a.kt)("p",null,"Example:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-cpp"},'/*\nBinary string to decimal\nHeader:\n    #include<iostream>\n    using namespace std;\nParameter:\n    string s: binary string to be converted\nReturn:\n    long long : decimal number after conversion\nExample:\n    cout << BinaryToInt("000010101"); //21\n*/\nlong long BinaryToInt(string s) {\n    long long sum = 0;\n    int k = 0;\n    for(int i = s.size()-1; i >= 0; i--) {\n        long long q = 1;\n        for(int j = 1; j <= k; j++) {\n            q *= 2;\n        }\n        sum += (s[i]-48)*q;\n        k++;\n    }\n    return sum;\n}\n')))}u.isMDXComponent=!0}}]);